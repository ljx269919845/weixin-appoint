<style lang='less'>
  .container {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 40rpx;
  }
  .column{
    width: 680rpx;
    padding-bottom: 30rpx;
    .title{
      font-size: 16pt;
      color:#09BB07;
    }
    .bd{
      width: 100%;
      border: 1rpx solid #ccc;
      min-height: 150rpx;
      margin-top: 10rpx;
      display: flex;
      flex-direction: column;
      justify-content: center;

      .center{
        display: block;
        margin: 0 auto;
      }
    }

    .bd-row{
      flex-direction: row;
    }
  }

  .button-hover{
    background-color: #09BB07;
    opacity: 0.7;
  }

  .depart{
    display: block;
    width: 120rpx;
    margin: auto;
    .d-bd{
      width: 540rpx;
      display: flex;
      flex-flow: row;
      justify-content: flex-start;
      .d-item{
        width: 200rpx;
      }
    }
  }
</style>

<template>
  <view class='container'>
    <view class="column">
      <view>
        <label class='title'>我的预约</label>
      </view>
      <view class="bd" wx:if='{{!myappoint.id}}'>
        <label class="center">祝你身体健康</label>
      </view>
      <block class="bd" wx:else>
        <view>
          <label>{{item.appointTime}} {{item.departmentName}}</label>
          <label>{{item.appointDate}}</label>
        </view>
      </block>
    </view>
    <view class="column">
      <label class='title'>挂号预约</label>
      <view class="bd bd-row depart">
        <label class="name">科室：</label>
        <view class="d-bd">
            <repeat for='{{departments}}' key='id' item='item'>
              <button class="d-item" type="default" button-hover="button-hover" @tap='handleDepartMentClick( {{item.id}} )'>{{item.departName}}</button>
          </repeat>
        </view>
      </view>
      <view>
        <view>
          <repeat for='{{appointDates}}' key='index' item='item'>
            <label>{{item}}</label>
          </repeat>
        </view>
        <view>
          <repeat for='{{appointTime}}' key='timeFrame' item='item'>
            <view>
              <label>{{item.timeFrame}}</label>
              <label>点击预约</label>
              <label>（{{item.count}}）</label>
            </view>
          </repeat>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {
    requst,
    API_URL,
    AppointItem
  } from '../data/api.js'
  const TIME_FRAME = ['8:00-9:00', '9:00-10:00', '10:00-11:00', '11:00-12:00',
    '14:00-15:00', '15:00-16:00', '16:00-17:00', '17:00-18:00'
  ]
  const WEEKS = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: 'test'
    };
    data = {
      myappoint: {},
      appoints: TIME_FRAME.map(elem => new AppointItem(elem))
    };
    computed = {
      departments() {
        if (!this.appoints || !this.appoints.length) {
          return []
        }
        const departs = []
        this.appoints.forEach((elem) => {
          elem.getDeparts().forEach((depart) => {
            if (departs.findIndex((felem) => {
              return felem.id === depart.id
            }) === -1) {
              departs.push(depart)
            }
          })
        })
        return departs
      },
      appointDates() {
        let tomorrow = new Date(new Date().getTime() + 3600 * 24)
        const day = tomorrow.getDate() > 9 ? tomorrow.getDate() : '0' + tomorrow.getDate()
        return [`${(tomorrow.getMonth() + 1)}-${day}(${WEEKS[tomorrow.getDay()]})`]
      },
      appointTime() {
        if (!this.appoints ||
          !this.appoints.length
        ) {
          return []
        }
        return this.appoints.map(elem => {
          return {
            timeFrame: elem.timeFrame,
            count: elem.realyTotal,
            appointSets: elem.appointSets
          }
        })
      }
    };
    methods = {
      handleDepartMentClick(departmentId) {
        this.departmentId = departmentId
        console.log('departmentid click', departmentId)
      },
      handleDateClick(appointDate) {
        this.appointDate = appointDate
      }
    }
    getMyAppoint(userId) {
      let self = this
      requst
        .get(API_URL.USER_APOINT_LIST, {
          userId: userId
        })
        .success(res => {
          let appoints = res.data || []
          self.myappoint = appoints[0] || {}
          self.$apply()
        })
    }
    loadAppointSet() {
      let self = this
      requst.get(API_URL.APPOINT_SET_LIST, {}, {
        status: 1
      }).success((res) => {
        const appointsets = res.data || []
        for (const appoint of appointsets) {
          const index = self.appoints.findIndex(elem => elem.timeFrame === appoint.timeFrame)
          if (index >= 0) {
            self.appoints[index].addAppointSet(appoint)
          }
        }
        self.$apply()
      })
    }
    onLoad() {
      let self = this
      wx.login({
        success(res) {
          if (res.code) {
            requst.post(API_URL.USER_LOGIN, {}, {}, {
              code: res.code
            }).success(response => {
              if (response.data.id && response.data.userName) {
                // 已经注册过
                self.getMyAppoint(response.data.id)
              }
            })
          }
        }
      })
      self.loadAppointSet()
    }
  }
</script>
