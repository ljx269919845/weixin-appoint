<style lang='less'>
  .zan-panel-title {
    color: #09BB07;
  }
  .zan-panel {
    width: 700rpx;
  }
  .my-appoint {
    min-height: 100rpx;
    width: 100%;
    .center {
      display: block;
      text-align: center;
      margin-top: 30rpx;
    }
    .my-appoint-item{
      width: 600rpx;
      margin-left: 40rpx;
      padding: 20rpx 0;
      font-size: 14px;
      position: relative;
      .doctor-name{
        padding: 20rpx 0;
      }
      .cancel{
        position: absolute;
        right: 0;
        top: 40rpx;
      }
    }
  }
  .depart {
    box-sizing: border-box;
    display: flex;
    flex-direction: row;
    align-items: stretch;
    font-size: 14px;
    .depart-title {
      width: 120rpx;
      margin: auto;
      padding-left: 15px;
    }
    .depart-bd {
      width: 570rpx;
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      flex: 1;
      padding-top: 5px;
      padding-bottom: 5px;
      align-content: space-around;
      justify-content: space-around;
      .depart-item {
        width: 140rpx;
        height: 70rpx;
        margin: 5px 0;
        border-radius: 10rpx;
        border: 1rpx solid #ccc;
        label {
          display: block;
          margin: 15rpx auto;
          text-align: center;
        }
      }
    }
  }
  .appoint {
    font-size: 14px;
    .appoint-bd {
      margin-left: 10px;
      display: flex;
      flex-direction: row;
      width: 678rpx;
      align-content: space-around;
      justify-content: space-around;
      flex: 1;
      flex-wrap: wrap;
      .appoint-item {
        width: 24.5%;
        border: 1rpx solid #ccc;
        box-sizing: border-box;
        height: 140rpx;
        margin-top: 5px;
        padding: 10rpx 0;
        position: relative;
        label {
          text-align: center;
          font-size: 12px;
          display: block;
        }
        .click {
          color: #09BB07;
          margin-top: 20rpx;
        }
        .num {
          position: absolute;
          right: 2rpx;
          bottom: 2rpx;
          font-size: 10px;
        }
      }
    }
  }
  .doctor {
    margin-left: 20px;
    display: flex;
    flex-direction: row;
    width: 680rpx;
    align-content: space-around;
    justify-content: flex-start;
    flex: 1;
    flex-wrap: wrap;
    font-size: 14px;
    padding: 15px;
    .doctor-item {
      width: 25%;
      border: 1rpx solid #ccc;
      box-sizing: border-box;
      overflow: hidden;
      text-align: center;
      padding: 10rpx 0;
      .name {
        font-size: 12px;
      }
      .profess {
        font-size: 10px;
        margin-top: 10rpx;
      }
    }
  }
  .active {
    color: #fff;
    background-color: #4b0;
  }
  .disable {
    opacity: 0.3;
  }
  .warning{
    color: red;
    font-size: 12px;
    margin-left: 20rpx;
  }
</style>

<template>
  <view class='container'>
    <zanLoadmore1 :loading="begin"></zanLoadmore1>
    <view class="zan-panel-title">
      <label>我的预约</label>
    </view>
    <view class="zan-panel my-appoint">
      <label class="center" wx:if='{{!myappoint.id}}'>祝你身体健康</label>
      <block wx:else>
        <view class="my-appoint-item">
          <view @longpress="longpressClick">
            <view>{{myappoint.appointDate}} {{myappoint.appointTime}}</view>
            <view class="doctor-name">{{myappoint.doctor.doctorName}}({{myappoint.depart.departName}})</view>
          </view>
          <view class="cancel" wx:if="{{cancelAppoint}}">
            <button class="zan-btn zan-btn--small zan-btn--primary" @tap="applyCancelAppoint">取消预约</button>
          </view>
        </view>
      </block>
    </view>
    <view class="zan-panel-title">
      <label class='title'>挂号预约</label>
      <label class="warning">每人每天限预约一个号</label>
    </view>
    <view class="zan-panel depart">
      <view class="depart-title">科室：</view>
      <view class="depart-bd">
        <repeat for='{{departments}}' key='id' item='item'>
          <view class="depart-item {{item.id==departId? 'active': ''}} {{disable? 'disable': ''}}" @tap="selectedDepart({{item.id}})">
            <label>{{item.departName}}</label>
          </view>
        </repeat>
      </view>
    </view>
    <view class="zan-panel-title">
      <label class='title'>{{appointDates}}</label>
    </view>
    <view class="zan-panel appoint">
      <view class="appoint-bd">
        <repeat for='{{appointTime}}' key='timeFrame' item='item'>
          <view class="appoint-item {{item.timeFrame == timeFrame? 'active': ''}} {{!item.count || disable? 'disable': ''}}" @tap="seletedTimeFrame({{item}})">
            <label>{{item.timeFrame}}</label>
            <label class="click">点击预约</label>
            <view class="num">{{item.count}}</view>
          </view>
        </repeat>
      </view>
    </view>
    <zanDoctos direction="bottom">
      <view class="zan-panel doctor">
        <repeat for='{{doctors}}' key='id' item='item'>
          <view class="doctor-item {{item.id==doctorId? 'active': ''}}" @tap="selectedDoctor({{item.id}})">
            <view class="name">{{item.doctorName}}</view>
            <view class="profess">{{item.professional}}</view>
          </view>
        </repeat>
      </view>
    </zanDoctos>
    <zanToast></zanToast>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import zanPopup from '../components/zan-popup'
  import zanLoadmore from '../components/zan-loadmore'
  import zanToast from '../components/zan-toast'
  import {
    requst,
    API_URL,
    AppointItem
  } from '../data/api.js'
  const TIME_FRAME = ['8:00-9:00', '9:00-10:00', '10:00-11:00', '11:00-12:00',
    '14:00-15:00', '15:00-16:00', '16:00-17:00', '17:00-18:00'
  ]
  const WEEKS = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']
  const TOMORROW = new Date(new Date().getTime() + 3600 * 24 * 1000)
  let TOMORROW_TEXT = `${TOMORROW.getFullYear()}-` + `${TOMORROW.getMonth() > 8 ? TOMORROW.getMonth() + 1 : '0' + (TOMORROW.getMonth() + 1)}-`
  TOMORROW_TEXT += `${TOMORROW.getDate() > 9 ? TOMORROW.getDate() : '0' + TOMORROW.getDate()}`
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '社康挂号助手'
    }
    components = {
      zanDoctos: zanPopup,
      zanToast: zanToast,
      zanLoadmore1: zanLoadmore
    }
    data = {
      myappoint: {},
      appoints: TIME_FRAME.map(elem => new AppointItem(elem)),
      departId: null,
      appointDate: TOMORROW_TEXT,
      timeFrame: null,
      doctors: [],
      doctorId: null,
      appointSetId: null,
      begin: false,
      cancelAppoint: false
    };
    computed = {
      disable() {
        const disable = this.myappoint.appointDate === this.appointDate
        return disable
      },
      departments() {
        if (!this.appoints || !this.appoints.length) {
          return []
        }
        const departs = []
        this.appoints.forEach((elem) => {
          elem.getDeparts().forEach((depart) => {
            if (departs.findIndex((felem) => {
              return felem.id === depart.id
            }) === -1) {
              departs.push(depart)
            }
          })
        })
        return departs
      },
      appointDates() {
        let tomorrow = TOMORROW
        // const day = tomorrow.getDate() > 9 ? tomorrow.getDate() : '0' + tomorrow.getDate()
        return [`${TOMORROW_TEXT}(${WEEKS[tomorrow.getDay()]})`]
      },
      appointTime() {
        if (!this.appoints ||
          !this.appoints.length
        ) {
          return []
        }
        let appoints = this.appoints.map(appoint => {
          return appoint.filterDepartId(this.departId)
        })
        return appoints.map(elem => {
          return {
            timeFrame: elem.timeFrame,
            count: elem.totalSurplus,
            appointSets: elem.appointSets
          }
        })
      }
    };
    methods = {
      longpressClick() {
        this.cancelAppoint = true
      },
      applyCancelAppoint() {
        if (!this.cancelAppoint) {
          return
        }
        this.cancelAppoint = false
        let self = this
        requst.post(API_URL.USER_APOINT_DELETE, {appointId: this.myappoint.id, status: 0}, {}, {}).success(() => {
          self.$invoke('zanToast', 'showZanToast', {
            title: '取消成功',
            timeout: 1500
          })
          self.myappoint = {}
          self.refresh()
          self.$apply()
        }).failed(() => {
          self.$invoke('zanToast', 'showZanToast', {
            title: '取消失败',
            timeout: 1500
          })
          this.cancelAppoint = true
          self.$apply()
        })
      },
      handleDepartMentClick(departmentId) {
        if (this.disable) {
          return
        }
        this.departmentId = departmentId
        console.log('departmentid click', departmentId)
      },
      handleDateClick(appointDate) {
        this.appointDate = appointDate
      },
      selectedDepart(departId) {
        if (this.disable) {
          return
        }
        this.departId = departId
      },
      seletedTimeFrame(appoint) {
        if (!appoint.count || this.disable) {
          return
        }
        this.timeFrame = appoint.timeFrame
        const doctors = appoint.appointSets.map(elem => {
          elem.doctor.appointSetId = elem.id
          return elem.doctor
        })
        this.doctors = doctors.filter(doctor => doctor.status === 1)
        if (this.doctors.length > 1) {
          this.doctorId = null
          this.$invoke('zanDoctos', 'togglePopup')
        } else {
          this.doctorId = this.doctors[0].id
          this.appointSetId = this.doctors[0].appointSetId
          this.applyAppointSet()
        }
      },
      selectedDoctor(doctor) {
        this.doctorId = doctor.id
        this.appointSetId = doctor.appointSetId
        this.$invoke('zanDoctos', 'togglePopup')
      }
    }
    getMyAppoint(userId) {
      let self = this
      requst
        .get(API_URL.USER_APOINT_LIST, {
          userId: userId
        }, {status: 1})
        .success(res => {
          let appoints = res.data || []
          self.myappoint = appoints[0] || {}
          self.$apply()
        })
    }
    loadAppointSet() {
      let self = this
      requst.get(API_URL.APPOINT_SET_LIST, {}, {
        status: 1
      }).success((res) => {
        const appointsets = res.data || []
        self.appoints = TIME_FRAME.map(elem => new AppointItem(elem))
        for (const appoint of appointsets) {
          const index = self.appoints.findIndex(elem => elem.timeFrame === appoint.timeFrame)
          if (index >= 0) {
            self.appoints[index].addAppointSet(appoint)
          }
        }
        if (appointsets.length) {
          self.departId = appointsets[0].depart.id
        }
        self.$apply()
      })
    }
    applyAppointSet() {
      if (this.begin) {
        return
      }
      let self = this
      let userInfo = null
      this.begin = true
      try {
        userInfo = wx.getStorageSync('userInfo')
      } catch (e) {}
      if (!userInfo && !this.userId) {
        self.$invoke('zanToast', 'showZanToast', {
          title: '程序异常，请退出重试',
          timeout: 1500
        })
        this.timeFrame = null
        this.begin = false
        return
      } else if (!userInfo && this.userId) {
        wx.setStorage({
          key: 'appoint',
          data: JSON.stringify({
            doctorId: self.doctorId,
            userId: this.userId,
            departId: self.departId,
            appointDate: self.appointDate,
            appointTime: self.timeFrame,
            status: 1,
            settingId: self.appointSetId
          })
        })
        wx.switchTab({
          url: 'user',
          fail: (e) => {
            console.log(e)
            self.$invoke('zanToast', 'showZanToast', {
              title: '程序异常，请重试',
              timeout: 1500
            })
            self.timeFrame = null
          }
        })
        this.begin = false
        return
      }
      const userId = this.userId || userInfo.id
      requst.post(API_URL.USER_APOINT_APPLY, {
        settingId: self.appointSetId
      }, {}, {
        doctorId: self.doctorId,
        userId: userId,
        departId: self.departId,
        appointDate: self.appointDate,
        appointTime: self.timeFrame,
        status: 1
      })
      .success((res) => {
        self.$invoke('zanToast', 'showZanToast', {
          title: '预约成功',
          timeout: 1500
        })
        self.begin = false
        self.refresh()
      }).failed(() => {
        self.$invoke('zanToast', 'showZanToast', {
          title: '预约失败',
          timeout: 1500
        })
        self.begin = false
        self.timeFrame = null
      })
    }
    refresh() {
      this.appointTime = null
      this.appointSetId = null
      this.doctorId = null
      this.loadAppointSet()
      this.getMyAppoint(this.userId)
    }
    onLoad() {
      let self = this
      self.$parent.globalData.loginPromise.then(userInfo => {
        if (userInfo && userInfo.id && userInfo.userName) {
          // 已经注册过
          self.getMyAppoint(userInfo.id)
          self.userId = userInfo.id
          self.userInfo = userInfo
        }
      })
      self.loadAppointSet()
    }
  }
</script>
