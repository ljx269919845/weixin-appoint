<style lang='less'>
  .zan-panel-title{
    color: #09BB07;
  }
  .zan-panel{
    width: 700rpx;
  }

  .my-appoint{
    min-height: 100rpx;
    .center{
      display: block;
      text-align: center;
      margin-top: 30rpx;
    }
  }

  .depart{
    box-sizing: border-box;
    display: flex;
    flex-direction: row;
    align-items: stretch;
    font-size: 14px;
    .depart-title{
      width: 120rpx;
      margin: auto;
      padding-left: 15px;
    }
    .depart-bd{
      width: 570rpx;
      display: flex;
      flex-direction: row;
      flex: 1;
      padding-top: 5px;
      padding-bottom: 5px;
      align-content: space-around;
      justify-content: space-around;
      .depart-item{
        width: 140rpx;
        height: 70rpx;
        margin: 5px 0;
        border-radius: 10rpx;
        border: 1rpx solid #ccc;
        label{
          display: block;
          margin: 15rpx auto;
          text-align: center;
        }
      }
    }
  }

  .active{
    background-color: #09BB07;
    opacity: 0.8;
  }

</style>

<template>
  <view class='container'>
    <view class="zan-panel-title">
      <label>我的预约</label>
    </view>
    <view class="zan-panel my-appoint">
      <label class="center" wx:if='{{!myappoint.id}}'>祝你身体健康</label>
      <block wx:else>
        <view class="my-appoint-item">
          <label>{{item.appointTime}} {{item.departmentName}}</label>
          <label>{{item.appointDate}}</label>
        </view>
      </block>
    </view>

    <view class="zan-panel-title">
      <label class='title'>挂号预约</label>
    </view>
    <view class="zan-panel depart">
      <view class="depart-title">科室：</view>
      <view class="depart-bd">
          <repeat for='{{departments}}' key='id' item='item'>
            <view class="depart-item {{item.id==departId? 'active': ''}}" @tap="selectedDepart({{item.id}})">
              <label>{{item.departName}}</label>
            </view>
        </repeat>
      </view>
    </view>
  <view class="zan-panel-title">
      <label class='title'>{{appointDates}}</label>
    </view>
    <view class="zan-panel appoint">
      <view class="appoint-bd">
        <repeat for='{{appointTime}}' key='id' item='item'>
          <view class="appoint-item {{item.timeFrame == timeFrame? 'active': ''}}">
            <label>{{item.timeFrame}}</label>
            <label>点击预约</label>
            <view>{{item.count}}</view>
          </view>
        </repeat>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {
    requst,
    API_URL,
    AppointItem
  } from '../data/api.js'
  const TIME_FRAME = ['8:00-9:00', '9:00-10:00', '10:00-11:00', '11:00-12:00',
    '14:00-15:00', '15:00-16:00', '16:00-17:00', '17:00-18:00'
  ]
  const WEEKS = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: 'test'
    };
    data = {
      myappoint: {},
      appoints: TIME_FRAME.map(elem => new AppointItem(elem)),
      departId: null,
      timeFrame: null
    };
    computed = {
      departments() {
        if (!this.appoints || !this.appoints.length) {
          return []
        }
        const departs = []
        this.appoints.forEach((elem) => {
          elem.getDeparts().forEach((depart) => {
            if (departs.findIndex((felem) => {
              return felem.id === depart.id
            }) === -1) {
              departs.push(depart)
            }
          })
        })
        return departs
      },
      appointDates() {
        let tomorrow = new Date(new Date().getTime() + 3600 * 24)
        const day = tomorrow.getDate() > 9 ? tomorrow.getDate() : '0' + tomorrow.getDate()
        return [`${(tomorrow.getMonth() + 1)}-${day}(${WEEKS[tomorrow.getDay()]})`]
      },
      appointTime() {
        if (!this.appoints ||
          !this.appoints.length
        ) {
          return []
        }
        let appoints = this.appoints.map(appoint => {
          return appoint.filterDepartId(this.departId)
        })
        return appoints.map(elem => {
          return {
            timeFrame: elem.timeFrame,
            count: elem.realyTotal,
            appointSets: elem.appointSets
          }
        })
      }
    };
    methods = {
      handleDepartMentClick(departmentId) {
        this.departmentId = departmentId
        console.log('departmentid click', departmentId)
      },
      handleDateClick(appointDate) {
        this.appointDate = appointDate
      },
      selectedDepart(departId) {
        this.departId = departId
      }
    }
    getMyAppoint(userId) {
      let self = this
      requst
        .get(API_URL.USER_APOINT_LIST, {
          userId: userId
        })
        .success(res => {
          let appoints = res.data || []
          self.myappoint = appoints[0] || {}
          self.$apply()
        })
    }
    loadAppointSet() {
      let self = this
      requst.get(API_URL.APPOINT_SET_LIST, {}, {
        status: 1
      }).success((res) => {
        const appointsets = res.data || []
        for (const appoint of appointsets) {
          const index = self.appoints.findIndex(elem => elem.timeFrame === appoint.timeFrame)
          if (index >= 0) {
            self.appoints[index].addAppointSet(appoint)
          }
        }
        if (appointsets.length) {
          self.departId = appointsets[0].depart.id
        }
        self.$apply()
      })
    }
    onLoad() {
      let self = this
      self.$parent.globalData.loginPromise.then(response => {
        if (response.data.id && response.data.userName) {
          // 已经注册过
          self.getMyAppoint(response.data.id)
        }
      })
      self.loadAppointSet()
    }
  }
</script>
