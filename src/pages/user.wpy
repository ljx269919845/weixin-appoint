<style lang="css">
  .zan-panel {
    width: 700rpx;
  }
  .picker {
    display: block;
    width: 600rpx;
    height: 40rpx;
  }
</style>

<template>
  <view class="container">
    <view class="zan-panel">
      <userName :options.sync="userNameOptions"  @zanFieldChange.user="userNameChange" componentId="userName"></userName>
      <userPhone :options.sync="userPhoneOptions" @zanFieldChange.user="userPhoneChange"  componentId="userPhone"></userPhone>
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">性别</view>
        <syncSwitch :checked.sync="userSex" componentId="userSex" @zanSwitchChange.user="userSexChange"></syncSwitch>
      </view>
      <view class="zan-cell zan-field">
        <view class="zan-cell__hd zan-field__title">生日</view>
        <view>
          <picker class="zan-field__input zan-cell__bd picker" mode="date" value="{{userDay}}" bindchange="bindDateChange">
            <view class="picker zan-field__input">{{userDay}}</view>
          </picker>
        </view>
      </view>
      <view class="zan-btns">
        <button class="zan-btn zan-btn--primary" formType="submit" @tap="updateUser">{{btnText}}</button>
      </view>
    </view>
    <zanToptips></zanToptips>
    <zanToast></zanToast>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import zanField from '../components/zan-field'
  import zanSwitch from '../components/zan-switch'
  import zanToptips from '../components/zan-toptips'
  import zanToast from '../components/zan-toast'
  import {
    API_URL,
    requst
  } from '../data/api.js'
  export default class UserPage extends wepy.page {
    config = {
      navigationBarTitleText: '个人信息'
    }
    components = {
      userName: zanField,
      userPhone: zanField,
      syncSwitch: zanSwitch,
      zanToptips: zanToptips,
      zanToast: zanToast
    }
    data = {
      userName: '',
      userPhone: '',
      userSex: true,
      userDay: '1990-01-01',
      userNameOptions: {
        title: '姓名',
        placeholder: '请输入姓名'
      },
      userPhoneOptions: {
        title: '手机号',
        placeholder: '请输入手机号',
        inputType: 'number'
      },
      btnText: '确认修改'
    }
    methods = {
      bindDateChange: function(e) {
        this.userDay = e.detail.value
      },
      userSexChange: function(e) {
        this.userSex = !this.userSex
        console.log('usersex:', this.userSex)
        this.$apply()
      },
      userNameChange: function(userName) {
        this.userName = userName.detail.value
      },
      userPhoneChange: function(userPhone) {
        this.userPhone = userPhone.detail.value
      },
      updateUser: function(e) {
        if (!this.userName) {
          this.$invoke('zanToptips', 'showZanTopTips', {
            content: '请输入姓名'
          })
          return
        }
        if (!this.userPhone) {
          this.$invoke('zanToptips', 'showZanTopTips', {
            content: '请输入手机号'
          })
          return
        }
        let self = this
        self.postHttpUpdateUser()
      }
    }
    postHttpUpdateUser(update) {
      let self = this
      requst.post(API_URL.USER_INFO_UPDATE, {
        id: this.userId
      }, {}, {
        userName: this.userName,
        userPhone: this.userPhone,
        userSex: this.userSex ? 1 : 0,
        userDay: this.userDay,
        id: this.userId
      }).success(() => {
        if (this.appoint) {
          this.applyAppointSet()
        } else {
          self.$invoke('zanToast', 'showZanToast', {
            title: '修改成功',
            timeout: 1500
          })
        }
      })
    }
    applyAppointSet() {
      let self = this
      requst.post(API_URL.USER_APOINT_APPLY, {
        settingId: self.appoint.settingId
      }, {}, self.appoint)
      .success((res) => {
        self.$parent.globalData.appoint = null
        self.$parent.globalData.needRresh = true
        self.$invoke('zanToast', 'showZanToast', {
          title: '预约成功',
          timeout: 1500
        })
        setTimeout(() => {
          wx.switchTab({
            url: 'index'
          })
        }, 1500)
      }).failed(() => {
        self.$invoke('zanToast', 'showZanToast', {
          title: '预约失败',
          timeout: 1500
        })
      })
    }
    onLoad() {
      let self = this
      self.$parent.globalData.loginPromise.then(userInfo => {
        if (userInfo && userInfo.id) {
          self.userId = userInfo.id
          self.userInfo = userInfo
        } else if (!userInfo) {
          try {
            let userInfo = wx.wx.getStorageSync('userInfo')
            if (!userInfo) {
              userInfo = JSON.parse(userInfo)
              self.userId = userInfo.id
            }
          } catch (e) {}
        } else {
          self.userId = userInfo.id
        }
        if (self.userInfo) {
          self.userName = self.userInfo.userName
          self.userPhone = self.userInfo.userPhone
          self.userSex = !!self.userInfo.userSex
          self.userDay = self.userInfo.userDay || '1990-01-01'
          self.userNameOptions.value = self.userName
          self.userPhoneOptions.value = self.userPhone
          self.$apply()
        }
      })
    }
    onShow() {
      let self = this
      try {
        self.appoint = self.$parent.globalData.appoint
        if (self.appoint) {
          self.btnText = '确认预约'
        } else {
          self.btnText = '确认修改'
        }
      } catch (e) {}
    }
  }
</script>
